# generated by datamodel-codegen:
#   filename:  specs.yml
#   timestamp: 2024-06-27T18:20:11+00:00

from __future__ import annotations

from typing import Optional, List

from pydantic import AnyUrl, BaseModel, Field
from dat_core.pydantic_models import ConnectionSpecification


class ConnectionSpecificationModel(ConnectionSpecification):
    host: str = Field(
        None, description='Hostname of the Postgres server', title='Host'
    )
    port: int = Field(
        None, description='Port of the Postgres server', title='Port'
    )
    dbname: str = Field(
        None, description='Name of the database', title='Database Name'
    )
    user: str = Field(
        None, description='Username to connect to the database', title='User'
    )
    password: Optional[str] = Field(
        None, description='Password to connect to the database', title='Password'
    )
    schemas: Optional[List[str]] = Field(
        "public", description='List of schemas to discover', title='Schemas'
    )


class PostgresSpecification(BaseModel):
    documentation_url: Optional[AnyUrl] = None
    name: str = Field(
        ...,
        description='The name of the specific connector to which this ConnectorSpecification belongs.',
    )
    module_name: str = Field(
        ..., description='Name of the python module for this connector'
    )
    connection_specification: ConnectionSpecificationModel = Field(
        ...,
        description='ConnectorDefinition specific blob. Must be a valid JSON string.',
    )
