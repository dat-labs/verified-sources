# generated by datamodel-codegen:
#   filename:  specs.yml
#   timestamp: 2024-06-27T19:35:12+00:00

from __future__ import annotations

from typing import Optional, List, Literal

from pydantic import AnyUrl, BaseModel, Field
from dat_core.pydantic_models import ConnectionSpecification


class ConnectionSpecificationModel(ConnectionSpecification):
    host: str = Field(
        None, description='Hostname of the Postgres server', title='Host'
    )
    port: int = Field(
        5432, description='Port of the Postgres server', title='Port'
    )
    dbname: str = Field(
        None, description='Name of the database', title='Database Name'
    )
    user: str = Field(
        None, description='Username to connect to the database', title='User'
    )
    password: Optional[str] = Field(
        None, description='Password to connect to the database', title='Password',
        json_schema_extra={
            'ui-opts': {
                'masked': True,
            }
        }
    )
    schemas: List[str] = Field(
        ['public'],
        description='List of schema to sync tables from',
        title='Schemas',
    )


class PostgresSpecification(BaseModel):
    documentation_url: Optional[str] = (
        'https://datlabs.gitbook.io/datlabs/integrations/sources/postgres'
    )
    name: Literal['Postgres']
    module_name: Literal['postgres']
    connection_specification: ConnectionSpecificationModel = Field(
        ...,
        description='ConnectorDefinition specific blob. Must be a valid JSON string.',
    )
