# generated by datamodel-codegen:
#   filename:  specs.yml
#   timestamp: 2024-08-05T13:09:45+00:00

from __future__ import annotations

from typing import Optional, Literal

from pydantic import AnyUrl, BaseModel, Extra, Field
from dat_core.pydantic_models import ConnectionSpecification


class ConnectionSpecificationModel(ConnectionSpecification):
    client_id: Optional[str] = Field(
        None, description='Client ID for the project', title='Client ID'
    )
    client_secret: Optional[str] = Field(
        None, description='Client secret for the project', title='Client Secret'
    )
    project_id: Optional[str] = Field(
        None, description='ID of the project', title='Project ID'
    )
    bucket_name: Optional[str] = Field(
        None, description='Name of the Bucket', title='Bucket Name'
    )
    token: Optional[str] = Field(
        None, description='Token for the project', title='Token'
    )
    refresh_token: Optional[str] = Field(
        None, description='Refresh token for the project', title='Refresh Token'
    )


class GoogleCloudStorageSpecification(BaseModel):
    class Config:
        extra = 'allow'

    documentation_url: Optional[str] = (
        'https://datlabs.gitbook.io/datlabs/integrations/sources/google-drive'
    )
    name: Literal['GoogleCloudStorage']
    module_name: Literal['google_cloud_storage']
    changelog_url: Optional[str] = 'www.example.com'
    connection_specification: ConnectionSpecificationModel = Field(
        ...,
        description='ConnectorDefinition specific blob. Must be a valid JSON string.',
    )
