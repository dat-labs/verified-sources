# generated by datamodel-codegen:
#   filename:  catalog.yml
#   timestamp: 2024-04-18T11:39:43+00:00

from __future__ import annotations

from typing import List, Optional, Union
from pydantic import Field
from dat_core.pydantic_models import DatDocumentStream, DatCatalog


class TxtDatStream(DatDocumentStream):
    name: Optional[str] = Field(
        'txt',
        description='The name of the document stream.',
        json_schema_extra={
            'ui-opts': {
                'hidden': True,
            }
        }
    )

    local_file_paths: List[str] = Field(
        ...,
        description='The path of the file to be read.',
        title='Upload File',
        json_schema_extra={
            'ui-opts': {
                'file_upload': True,
                'allowed_file_types': ['.txt'],
            }
        }
    )

    obj_file_paths: List[str] = Field(None,
        json_schema_extra={'ui-opts': {'hidden': True}}
    )


class CsvDatStream(DatDocumentStream):
    name: Optional[str] = Field(
        'csv',
        description='The name of the document stream.',
        json_schema_extra={
            'ui-opts': {
                'hidden': True,
            }
        }
    )

    local_file_paths: List[str] = Field(
        ...,
        description='The path of the file to be read.',
        title='Upload File',
        json_schema_extra={
            'ui-opts': {
                'file_upload': True,
                'allowed_file_types': ['.csv'],
            }
        }
    )

    obj_file_paths: List[str] = Field(None,
        json_schema_extra={'ui-opts': {'hidden': True}}
    )

class LocalFileSystemCatalog(DatCatalog):
    document_streams: List[Union[TxtDatStream, CsvDatStream]]
